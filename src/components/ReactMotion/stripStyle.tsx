/* @flow */
// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by
// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}

import type { Style, PlainStyle } from './Types';

export default function stripStyle(style: Style): PlainStyle {
  let ret: PlainStyle = {};
  for (const key in style) {
    if (!Object.prototype.hasOwnProperty.call(style, key)) {
      continue;
    }
    
    // Necessary to avoid getting value from type 'number'
    var styleKey = style[key];
    
    ret[key] = typeof styleKey === 'number' ? styleKey : styleKey.val;
  }
  return ret;
}